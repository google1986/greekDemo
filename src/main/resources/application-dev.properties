server.context-path=/greek
server.port=8003
logging.config=ext/conf/logback-spring.xml
#开发环境启用Swagger
swagger.enable=true
# 驱动配置信息
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/greek?useUnicode=true&amp;characterEncoding=utf8
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.jdbc.Driver

#连接池的配置信息
## 初始化大小，最小，最大
spring.druid.initialSize=5
spring.druid.minIdle=5
spring.druid.maxActive=20
## 配置获取连接等待超时的时间,获取连接时最大等待时间，单位毫秒
spring.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.druid.minEvictableIdleTimeMillis=300000
#用来检测连接是否有效的sql，要求是一个查询语句。
#如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.druid.validationQuery=SELECT 1 FROM DUAL
spring.druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
spring.druid.testOnReturn=false
#是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。
#在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
spring.druid.poolPreparedStatements=true
spring.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#属性类型是字符串，通过别名的方式配置扩展插件，
#常用的插件有：监控统计用的filter:stat;日志用的filter:log4j;防御sql注入的filter:wall
spring.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

#mybatis
# 所有Entity别名类所在包
mybatis.type-aliases-package=com.htzw.study.entities
# 使全局的映射器开启二级缓存
mybatis.configuration.cache-enabled=true
#允许JDBC 生成主键。使用jdbc的getGeneratedKeys获取数据库自增主键值
mybatis.configuration.use-generated-keys=true
#开启驼峰命名转换
mybatis.configuration.map-underscore-to-camel-case=true
#延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态
mybatis.configuration.lazy-loading-enabled=true
#当开启时，任何方法的调用都会加载该对象的所有属性。否则，每个属性会按需加载
mybatis.configuration.aggressive-lazy-loading=false
#配置日志
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
# mapper映射文件
mybatis.mapper-locations=classpath:mapper/*.xml

#mappers 多个接口时逗号隔开
mapper.mappers=com.htzw.study.utils.MyMapper
mapper.not-empty=false
mapper.identity=MYSQL

#pagehelper
pagehelper.helperDialect=mysql
#分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
#pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

#Redis配置
#用来指定存放session的存储方式
spring.session.store-type=redis
# Redis数据库索引（默认为0）
spring.redis.database=1
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0